from itertools import permutations
import sys
input = sys.stdin.readline

n = int(input())
m = int(input())
INF = int(1e9)
graph = [[INF] * (n + 1) for _ in range(n + 1)]
for i in range(n + 1):
    graph[i][i] = 0
for i in range(m):
    start, end, cost = map(int, input().split())
    graph[start][end] = min(graph[start][end], cost)

arr = []
for i in range(1, n + 1):
    arr.append(i)

for i in range(1, n + 1):
    for tu in list(permutations(arr, 2)):
        start, end = tu[0], tu[1]
        graph[start][end] = min(graph[start][end], graph[start][i] + graph[i][end])

for i in range(1, n + 1):
    for j in range(1, n + 1):
        if graph[i][j] == INF:
            graph[i][j] = 0

for i in range(1, n + 1):
    print(" ".join(map(str, graph[i][1: n + 1])))
