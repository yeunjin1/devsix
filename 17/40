from collections import deque


def bfs(graph, start, visited):
    # 시작 노드 방문 처리, 방문한 노드는 q에 넣기
     q = deque([start])
     while q:
         # q에서 현재 검사할 노드 꺼내기
         v = q.popleft()
         # 현재 노드의 모든 인접 노드에 대해
         for next in graph[v]:
             # 방문하지 않았다면 방문 처리
             if not visited[next] and next != start:
                q.append(next)
                visited[next] = visited[v] + 1


INF = int(1e9)
N, M = map(int, input().split())
graph = [[] for _ in range(N + 1)]
for _ in range(M):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

visited = [0] * (N + 1)
bfs(graph, 1, visited)

ans2 = max(visited[1:])
ans1 = visited.index(ans2)
ans3 = 0
for d in visited:
    if d == ans2:
        ans3 += 1
print(ans1, ans2, ans3)

